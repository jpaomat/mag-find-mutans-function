name: PR-build-test-deploy
on:
  push:
    branches: [main, feature/*]
env:
  ### VARIABLES GENERALES ###
  project_name: "mag-find-mutants-function"
  team: "mag"
  language: "go"
  files_compress: "src node_modules index.js package.json package-lock.json"
  handler: main
  memory: 128

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.x"
      - name: Install dependencies
        run: |
          go version
          go get -u golang.org/x/lint/golint
      - name: Run build
        run: go build .
      - name: Run vet & lint
        run: |
          go vet .
          golint .
      - name: Run testing
      # crear carpeta coverage
      # general reportes coverage: cover.out, cover.html
      # mover anteriores archivos a la carpeta coverage
        run: |
          mkdir coverage
          go test -coverprofile=cover.out
          go tool cover -html=cover.out -o index.html
          mv cover.out coverage
          mv index.html coverage
      #   run: cd test && go test -v

  sonarcloud:
    runs-on: ubuntu-20.04
    needs: [build]
    name: SonarCloud
    steps:
      - uses: actions/checkout@v2
      - name: Current Branch
        shell: bash
        id: long-lived-branch
        run: |
          CURRENT_BRANCH=$(echo ${GITHUB_REF#refs/heads/})
          if [ "$CURRENT_BRANCH" != "main" ] && [ "$CURRENT_BRANCH" != "staging" ] && [ "$CURRENT_BRANCH" != "qa" ]
          then
            CURRENT_BRANCH="qa"
          fi
          echo "##[set-output name=branch;]$(echo ${CURRENT_BRANCH})"
          echo "Sonar Branch report => " ${CURRENT_BRANCH}
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # sonarcloud:
  #   name: SonarCloud
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@v1.3
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-lambda:
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/qa'
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy Lambda Function
        run: |
          GOOS=linux go build -o dist/main
          zip -j deploy.zip ./dist/*
          aws lambda update-function-code --function-name=${{env.project_name}} --zip-file=fileb://deploy.zip
